Breadth First Search (BFS)

BFS explores the graph level by level, starting from a source node:
- The starting node is at Level 0.
- Nodes at one edge distance are at Level 1.
- Nodes at two edge distance are at Level 2, and so on.

It travels breadth-wise ‚Äî we explore all immediate neighbors before moving deeper.

üìå Uses:
- A queue (FIFO) to ensure nodes visited first are processed first.
- A visited array to prevent revisiting nodes.

‚è±Ô∏è Time Complexity:
- O(V + E)
- Each node is visited once.
- Each edge is checked at most twice (in undirected graphs).

-If in bfs you want to print levelwise, you can the technique 
-of storing -1 after a Level

-another more elegnat way is to do bfs for all levels at one loop inside
-like track the size
-pop those many elements nad do their bfs


-another interesting property
-bfs helps find the shortest path between a starting node and destination node
-this is true for a undirected and directed graph
-edges should have the same weight
-why as it explores breadth first
-it doesnt search for deep path
-it searches for nearest neighbours from a node first